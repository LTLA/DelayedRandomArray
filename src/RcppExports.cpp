// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// recycle_vector
Rcpp::NumericVector recycle_vector(Rcpp::NumericVector vec, Rcpp::IntegerVector dim, Rcpp::List index);
RcppExport SEXP _DelayedRandomArray_recycle_vector(SEXP vecSEXP, SEXP dimSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type vec(vecSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(recycle_vector(vec, dim, index));
    return rcpp_result_gen;
END_RCPP
}
// sample_standard_uniform
Rcpp::RObject sample_standard_uniform(Rcpp::IntegerVector dim, Rcpp::IntegerVector chunkdim, Rcpp::List seeds, Rcpp::List index, int stream_start);
RcppExport SEXP _DelayedRandomArray_sample_standard_uniform(SEXP dimSEXP, SEXP chunkdimSEXP, SEXP seedsSEXP, SEXP indexSEXP, SEXP stream_startSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type chunkdim(chunkdimSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type seeds(seedsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type index(indexSEXP);
    Rcpp::traits::input_parameter< int >::type stream_start(stream_startSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_standard_uniform(dim, chunkdim, seeds, index, stream_start));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DelayedRandomArray_recycle_vector", (DL_FUNC) &_DelayedRandomArray_recycle_vector, 3},
    {"_DelayedRandomArray_sample_standard_uniform", (DL_FUNC) &_DelayedRandomArray_sample_standard_uniform, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_DelayedRandomArray(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
