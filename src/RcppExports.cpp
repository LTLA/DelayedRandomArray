// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// sample_standard_uniform
Rcpp::RObject sample_standard_uniform(Rcpp::IntegerVector dim, Rcpp::IntegerVector chunkdim, Rcpp::List seeds, Rcpp::List index);
RcppExport SEXP _DelayedRandomArray_sample_standard_uniform(SEXP dimSEXP, SEXP chunkdimSEXP, SEXP seedsSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type chunkdim(chunkdimSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type seeds(seedsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_standard_uniform(dim, chunkdim, seeds, index));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DelayedRandomArray_sample_standard_uniform", (DL_FUNC) &_DelayedRandomArray_sample_standard_uniform, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_DelayedRandomArray(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
